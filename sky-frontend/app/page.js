'use client';
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
// import Cookies from 'js-cookie';
function App() {
    const [isHovered2, setIsHovered2] = (0, react_1.useState)(false);
    const [buttonText2, setButtonText2] = (0, react_1.useState)("Click this");
    return (<div style={styles.background}>
    <div style={styles.container}>
    <div style={styles.board}>
      <h1>Hello</h1>
        <br></br>
        <a href="#" style={isHovered2 ? { ...styles.button, ...styles.hover } : styles.button} onMouseEnter={() => setIsHovered2(true)} onMouseLeave={() => setIsHovered2(false)} onClick={() => { setButtonText2("World!"); }}>
          {buttonText2}
        </a>
        <br></br>
  </div>
  </div>
  </div>);
}
// Styles
// ----------
const styles = {
    background: {
        width: '100vw',
        height: '100vh',
        backgroundColor: '#121212',
        color: '#ffffff',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        margin: '-8px',
        padding: 0,
    },
    board: {
        boxSizing: 'inherit',
        display: 'flex',
        justifyContent: 'center',
        textAlign: 'center',
        flexDirection: 'column',
        alignItems: 'center',
        width: 'min(50vw, 50vh)',
        height: 'auto',
        marginBottom: '20px',
    },
    container: {
        width: '100%',
        height: '100%',
        display: 'flex',
        flexDirection: 'column',
        justifyContent: 'center',
        alignItems: 'center',
        margin: 0,
        padding: 0,
        boxSizing: 'border-box',
    },
    button: {
        textDecoration: 'none',
        fontSize: '18px',
        fontWeight: 'bold',
        color: '#fff',
        backgroundColor: '#6c63ff',
        padding: '15px 30px',
        borderRadius: '50px',
        transition: 'transform 0.3s ease, box-shadow 0.3s ease',
        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
        cursor: 'pointer',
        textAlign: 'center',
    },
    hover: {
        transform: 'scale(1.05)',
        boxShadow: '0 6px 12px rgba(0, 0, 0, 0.2)',
    },
};
exports.default = App;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInBhZ2UudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQTs7O0FBRVosaUNBQWlDO0FBQ2pDLG1DQUFtQztBQUVuQyxTQUFTLEdBQUc7SUFFVixNQUFNLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxHQUFHLElBQUEsZ0JBQVEsRUFBQyxLQUFLLENBQUMsQ0FBQztJQUNwRCxNQUFNLENBQUMsV0FBVyxFQUFFLGNBQWMsQ0FBQyxHQUFHLElBQUEsZ0JBQVEsRUFBQyxZQUFZLENBQUMsQ0FBQztJQUU3RCxPQUFPLENBQ0wsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUM5QjtJQUFBLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FDN0I7SUFBQSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQ3ZCO01BQUEsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FDWDtRQUFBLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUNSO1FBQUEsQ0FBQyxDQUFDLENBQ0EsSUFBSSxDQUFDLEdBQUcsQ0FDUixLQUFLLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQzFFLFlBQVksQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUN4QyxZQUFZLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FDekMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUEsQ0FBQyxDQUFDLENBRTVDO1VBQUEsQ0FBQyxXQUFXLENBQ2Q7UUFBQSxFQUFFLENBQUMsQ0FDSDtRQUFBLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUNkO0VBQUEsRUFBRSxHQUFHLENBQ0w7RUFBQSxFQUFFLEdBQUcsQ0FDTDtFQUFBLEVBQUUsR0FBRyxDQUFDLENBQ0wsQ0FBQztBQUNKLENBQUM7QUFFRCxTQUFTO0FBQ1QsYUFBYTtBQUNiLE1BQU0sTUFBTSxHQUF3QztJQUNoRCxVQUFVLEVBQUU7UUFDVixLQUFLLEVBQUUsT0FBTztRQUNkLE1BQU0sRUFBRSxPQUFPO1FBQ2YsZUFBZSxFQUFFLFNBQVM7UUFDMUIsS0FBSyxFQUFFLFNBQVM7UUFDaEIsT0FBTyxFQUFFLE1BQU07UUFDZixjQUFjLEVBQUUsUUFBUTtRQUN4QixVQUFVLEVBQUUsUUFBUTtRQUNwQixNQUFNLEVBQUUsTUFBTTtRQUNkLE9BQU8sRUFBRSxDQUFDO0tBQ1g7SUFDRCxLQUFLLEVBQUU7UUFDTCxTQUFTLEVBQUUsU0FBUztRQUNwQixPQUFPLEVBQUUsTUFBTTtRQUNmLGNBQWMsRUFBRSxRQUFRO1FBQ3hCLFNBQVMsRUFBRSxRQUFRO1FBQ25CLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLEtBQUssRUFBRSxpQkFBaUI7UUFDeEIsTUFBTSxFQUFFLE1BQU07UUFDZCxZQUFZLEVBQUUsTUFBTTtLQUNyQjtJQUNELFNBQVMsRUFBRTtRQUNULEtBQUssRUFBRSxNQUFNO1FBQ2IsTUFBTSxFQUFFLE1BQU07UUFDZCxPQUFPLEVBQUUsTUFBTTtRQUNmLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLGNBQWMsRUFBRSxRQUFRO1FBQ3hCLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLE1BQU0sRUFBRSxDQUFDO1FBQ1QsT0FBTyxFQUFFLENBQUM7UUFDVixTQUFTLEVBQUUsWUFBWTtLQUN4QjtJQUVELE1BQU0sRUFBRTtRQUNOLGNBQWMsRUFBRSxNQUFNO1FBQ3RCLFFBQVEsRUFBRSxNQUFNO1FBQ2hCLFVBQVUsRUFBRSxNQUFNO1FBQ2xCLEtBQUssRUFBRSxNQUFNO1FBQ2IsZUFBZSxFQUFFLFNBQVM7UUFDMUIsT0FBTyxFQUFFLFdBQVc7UUFDcEIsWUFBWSxFQUFFLE1BQU07UUFDcEIsVUFBVSxFQUFFLDJDQUEyQztRQUN2RCxTQUFTLEVBQUUsOEJBQThCO1FBQ3pDLE1BQU0sRUFBRSxTQUFTO1FBQ2pCLFNBQVMsRUFBRSxRQUFpQjtLQUM3QjtJQUNELEtBQUssRUFBRTtRQUNMLFNBQVMsRUFBRSxhQUFhO1FBQ3hCLFNBQVMsRUFBRSwrQkFBK0I7S0FDM0M7Q0FDRixDQUFBO0FBRUgsa0JBQWUsR0FBRyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXHJcblxyXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuLy8gaW1wb3J0IENvb2tpZXMgZnJvbSAnanMtY29va2llJztcclxuXHJcbmZ1bmN0aW9uIEFwcCgpIHsgXHJcbiAgXHJcbiAgY29uc3QgW2lzSG92ZXJlZDIsIHNldElzSG92ZXJlZDJdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtidXR0b25UZXh0Miwgc2V0QnV0dG9uVGV4dDJdID0gdXNlU3RhdGUoXCJDbGljayB0aGlzXCIpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBzdHlsZT17c3R5bGVzLmJhY2tncm91bmR9PlxyXG4gICAgPGRpdiBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XHJcbiAgICA8ZGl2IHN0eWxlPXtzdHlsZXMuYm9hcmR9PlxyXG4gICAgICA8aDE+SGVsbG88L2gxPlxyXG4gICAgICAgIDxicj48L2JyPlxyXG4gICAgICAgIDxhXHJcbiAgICAgICAgICBocmVmPVwiI1wiXHJcbiAgICAgICAgICBzdHlsZT17aXNIb3ZlcmVkMiA/IHsgLi4uc3R5bGVzLmJ1dHRvbiwgLi4uc3R5bGVzLmhvdmVyIH0gOiBzdHlsZXMuYnV0dG9ufVxyXG4gICAgICAgICAgb25Nb3VzZUVudGVyPXsoKSA9PiBzZXRJc0hvdmVyZWQyKHRydWUpfVxyXG4gICAgICAgICAgb25Nb3VzZUxlYXZlPXsoKSA9PiBzZXRJc0hvdmVyZWQyKGZhbHNlKX1cclxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHsgc2V0QnV0dG9uVGV4dDIoXCJXb3JsZCFcIik7fX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICB7YnV0dG9uVGV4dDJ9XHJcbiAgICAgICAgPC9hPlxyXG4gICAgICAgIDxicj48L2JyPlxyXG4gIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuXHJcbi8vIFN0eWxlc1xyXG4vLyAtLS0tLS0tLS0tXHJcbmNvbnN0IHN0eWxlczogUmVjb3JkPHN0cmluZywgUmVhY3QuQ1NTUHJvcGVydGllcz4gPSB7XHJcbiAgICBiYWNrZ3JvdW5kOiB7XHJcbiAgICAgIHdpZHRoOiAnMTAwdncnLFxyXG4gICAgICBoZWlnaHQ6ICcxMDB2aCcsXHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJyMxMjEyMTInLFxyXG4gICAgICBjb2xvcjogJyNmZmZmZmYnLCAgICAgICAgICBcclxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXHJcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICBtYXJnaW46ICctOHB4JyxcclxuICAgICAgcGFkZGluZzogMCxcclxuICAgIH0sXHJcbiAgICBib2FyZDoge1xyXG4gICAgICBib3hTaXppbmc6ICdpbmhlcml0JyxcclxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXHJcbiAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXHJcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxyXG4gICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgICAgd2lkdGg6ICdtaW4oNTB2dywgNTB2aCknLFxyXG4gICAgICBoZWlnaHQ6ICdhdXRvJyxcclxuICAgICAgbWFyZ2luQm90dG9tOiAnMjBweCcsXHJcbiAgICB9LFxyXG4gICAgY29udGFpbmVyOiB7XHJcbiAgICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgICAgIGhlaWdodDogJzEwMCUnLFxyXG4gICAgICBkaXNwbGF5OiAnZmxleCcsXHJcbiAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxyXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXHJcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICBtYXJnaW46IDAsXHJcbiAgICAgIHBhZGRpbmc6IDAsXHJcbiAgICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnLFxyXG4gICAgfSxcclxuICAgXHJcbiAgICBidXR0b246IHtcclxuICAgICAgdGV4dERlY29yYXRpb246ICdub25lJyxcclxuICAgICAgZm9udFNpemU6ICcxOHB4JyxcclxuICAgICAgZm9udFdlaWdodDogJ2JvbGQnLFxyXG4gICAgICBjb2xvcjogJyNmZmYnLFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjNmM2M2ZmJyxcclxuICAgICAgcGFkZGluZzogJzE1cHggMzBweCcsXHJcbiAgICAgIGJvcmRlclJhZGl1czogJzUwcHgnLFxyXG4gICAgICB0cmFuc2l0aW9uOiAndHJhbnNmb3JtIDAuM3MgZWFzZSwgYm94LXNoYWRvdyAwLjNzIGVhc2UnLFxyXG4gICAgICBib3hTaGFkb3c6ICcwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpJyxcclxuICAgICAgY3Vyc29yOiAncG9pbnRlcicsXHJcbiAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicgYXMgY29uc3QsXHJcbiAgICB9LFxyXG4gICAgaG92ZXI6IHtcclxuICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoMS4wNSknLFxyXG4gICAgICBib3hTaGFkb3c6ICcwIDZweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4yKScsXHJcbiAgICB9LFxyXG4gIH1cclxuICBcclxuZXhwb3J0IGRlZmF1bHQgQXBwXHJcbiJdfQ==