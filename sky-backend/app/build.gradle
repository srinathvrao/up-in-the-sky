/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
    // Optional: log output goes to CloudWatch Logs
    implementation 'com.amazonaws:aws-lambda-java-log4j2:1.5.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'


    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'sky.backend.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

test {
    testLogging {
        showStandardStreams = true
    }
}


tasks.register('fatJar', Jar) {
    archiveClassifier.set('all')
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from(sourceSets.main.output)

    from({
        configurations.runtimeClasspath.filter { it.name.endsWith('jar') }.collect { zipTree(it) }
    })

    manifest {
        attributes(
            'Main-Class': 'sky.backend.Handler'
        )
    }
}